package jogo.controllers;

import javafx.fxml.FXML;
import javafx.event.ActionEvent;
import javafx.scene.Node;
import javafx.stage.Stage;

/**
 * âœ¨ SELECIONADOR DE FASES
 * Exemplo de como carregar diferentes fases dinamicamente
 */
public class SelecionadorDeFases {

    private final FaseController faseController = new FaseController();

    /**
     * ðŸŽµ Carrega Fase 1 - Despertar do Bardo
     */
    @FXML
    private void carregarFase1(ActionEvent event) {
        Stage stage = getStage(event);
        faseController.carregarFase1(stage);
        
        System.out.println("ðŸŽµ Iniciando Fase 1: Despertar do Bardo");
    }

    /**
     * ðŸ”¥ Carrega Fase 2 - FÃºria do Lorde
     */
    @FXML
    private void carregarFase2(ActionEvent event) {
        Stage stage = getStage(event);
        faseController.carregarFase2(stage);
        
        System.out.println("ðŸ”¥ Iniciando Fase 2: FÃºria do Lorde");
    }

    /**
     * âš¡ Carrega Fase 3 - Batalha Ã‰pica
     */
    @FXML
    private void carregarFase3(ActionEvent event) {
        Stage stage = getStage(event);
        faseController.carregarFase3(stage);
        
        System.out.println("âš¡ Iniciando Fase 3: Batalha Ã‰pica");
    }

    /**
     * ðŸŽ¯ Carrega fase personalizada por nÃºmero
     */
    public void carregarFasePersonalizada(ActionEvent event, int numeroFase) {
        Stage stage = getStage(event);
        faseController.carregarFase(stage, numeroFase);
        
        System.out.println("ðŸŽ¯ Iniciando Fase " + numeroFase + " (personalizada)");
    }

    /**
     * ðŸ”„ Exemplo de progressÃ£o automÃ¡tica de fases
     */
    public void proximaFase(ActionEvent event, int faseAtual) {
        Stage stage = getStage(event);
        faseController.carregarProximaFase(stage, faseAtual);
    }

    /**
     * ðŸ“‹ Lista fases disponÃ­veis
     */
    @FXML
    private void listarFases(ActionEvent event) {
        faseController.listarFasesDisponiveis();
    }

    /**
     * MÃ©todo utilitÃ¡rio para obter o Stage do evento
     */
    private Stage getStage(ActionEvent event) {
        return (Stage) ((Node) event.getSource()).getScene().getWindow();
    }
}
